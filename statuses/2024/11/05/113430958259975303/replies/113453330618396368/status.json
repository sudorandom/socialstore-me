{
  "id": "113453330618396368",
  "uri": "https://infosec.exchange/users/sudorandom/statuses/113453330618396368",
  "url": "https://infosec.exchange/@sudorandom/113453330618396368",
  "account": {
    "id": "109300069582362316",
    "username": "sudorandom",
    "acct": "sudorandom",
    "display_name": "Kevin McDonald",
    "locked": false,
    "created_at": "2022-11-07T00:00:00Z",
    "followers_count": 214,
    "following_count": 73,
    "statuses_count": 903,
    "note": "\u003cp\u003eSoftware Engineer. I post about backend programming, and nonsense. \u2029ðŸ‡ºðŸ‡¸ living in ðŸ‡©ðŸ‡°\u2029\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://kmcd.dev\" target=\"_blank\" rel=\"nofollow noopener\" translate=\"no\"\u003e\u003cspan class=\"invisible\"\u003ehttps://\u003c/span\u003e\u003cspan class=\"\"\u003ekmcd.dev\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e",
    "url": "https://infosec.exchange/@sudorandom",
    "avatar": "https://media.infosec.exchange/infosec.exchange/accounts/avatars/109/300/069/582/362/316/original/37209718fa7513e2.jpg",
    "avatar_static": "https://media.infosec.exchange/infosec.exchange/accounts/avatars/109/300/069/582/362/316/original/37209718fa7513e2.jpg",
    "header": "https://media.infosec.exchange/infosec.exchange/accounts/headers/109/300/069/582/362/316/original/2c905419ef36413a.png",
    "header_static": "https://media.infosec.exchange/infosec.exchange/accounts/headers/109/300/069/582/362/316/original/2c905419ef36413a.png",
    "emojis": [],
    "moved": null,
    "fields": [
      {
        "name": "Languages",
        "value": "English, Danish (beginner)",
        "verified_at": "0001-01-01T00:00:00Z"
      },
      {
        "name": "Interests",
        "value": "programming, doing weird things with data, video games, board games",
        "verified_at": "0001-01-01T00:00:00Z"
      },
      {
        "name": "Website",
        "value": "\u003ca href=\"https://kmcd.dev\" target=\"_blank\" rel=\"nofollow noopener me\" translate=\"no\"\u003e\u003cspan class=\"invisible\"\u003ehttps://\u003c/span\u003e\u003cspan class=\"\"\u003ekmcd.dev\u003c/span\u003e\u003cspan class=\"invisible\"\u003e\u003c/span\u003e\u003c/a\u003e",
        "verified_at": "2024-05-25T17:40:09.733Z"
      }
    ],
    "bot": false,
    "discoverable": true,
    "source": null,
    "followed_tags": null
  },
  "in_reply_to_id": "113430958259975303",
  "in_reply_to_account_id": "109300069582362316",
  "reblog": null,
  "content": "\u003cp\u003eKeep it simple. Most of the time very simple procedural programs are much easier to debug and replace than overly object orientated enterprise monstrosities. Clearly identify the surface area of your service. What are the inputs and outputs? These need the most documentation. I prefer using comments in protobuf files to document these things. Protobuf solves the issue with communicating all of the types associated with services/methods and related types. The main thing to focus on with comments are non-obvious semantics. Protovalidate helps further describe the types of data that is expected for each field.\u003c/p\u003e",
  "created_at": "2024-11-09T13:54:00.342Z",
  "edited_at": "0001-01-01T00:00:00Z",
  "emojis": [],
  "replies_count": 0,
  "reblogs_count": 0,
  "favourites_count": 0,
  "reblogged": false,
  "favourited": false,
  "bookmarked": false,
  "muted": false,
  "sensitive": false,
  "spoiler_text": "",
  "visibility": "public",
  "media_attachments": [],
  "mentions": [],
  "tags": [],
  "card": null,
  "poll": null,
  "application": {
    "id": "",
    "redirect_uri": "",
    "client_id": "",
    "client_secret": ""
  },
  "language": "en",
  "pinned": false,
  "params": {
    "application_id": "",
    "idempotency": "",
    "in_reply_to_id": null,
    "media_ids": null,
    "poll": null,
    "sensitive": false,
    "spoiler_text": "",
    "text": "",
    "visibility": ""
  }
}